plugins {
    id('java')
    id("maven-publish")
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id("com.modrinth.minotaur") version "2.+"
    id("com.gradleup.shadow") version "9.0.0-rc1"
}

group = "fr.darklash.regensystem"
version = project.findProperty("regensystemVersion").toString() ?: "0.0.1"

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "dmulloy2-repo"
        url = "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        name = "codemc-repo"
        url = "https://repo.codemc.io/repository/maven-public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/releases/'
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io/"
    }
    maven {
        url = "https://repo.bstats.org"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT")
    compileOnly("me.clip:placeholderapi:2.11.6")
    compileOnly project(":regensystem-api")
    implementation("org.json:json:20250517")
    implementation("org.yaml:snakeyaml:2.4")
    implementation("org.bstats:bstats-bukkit:3.1.0")
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
    testImplementation("org.mockbukkit.mockbukkit:mockbukkit-v1.21:4.60.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.13.2")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.13.2")
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.20")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.shadowJar {
    relocate("org.bstats", "fr.darklash.regensystem.bstats")
    archiveFileName.set("RegenSystem-${version}.jar")
    minimize()
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

modrinth {
    token.set(project.findProperty("modrinthToken")?.toString())

    projectId.set("regensystem") // Le slug ou l’ID Modrinth de ton projet
    versionNumber.set(project.version.toString()) // Utilise le même numéro que celui du plugin
    versionName.set("RegenSystem ${project.version}") // Nom lisible de la version

    versionType.set("release") // release | beta | alpha

    uploadFile.set(tasks.named("shadowJar").flatMap { it.archiveFile })

    changelog.set(file("CHANGELOG.md").exists() ? file("CHANGELOG.md").text : "No changelog provided.")

    gameVersions.set(["1.20.6", "1.20.5", "1.20.4", "1.20.3", "1.20.2", "1.20.1", "1.20"]) // Ajoute d'autres versions si tu veux
    loaders.set(["bukkit", "paper"]) // Pour Bukkit, tu peux ajouter "bukkit" aussi
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(tasks.shadowJar) // publie aussi le shadowJar
            artifact(tasks.javadocJar)
            artifact(tasks.sourcesJar)
            groupId = group
            artifactId = "regensystem-plugin"
            version = project.version
        }
    }
}
