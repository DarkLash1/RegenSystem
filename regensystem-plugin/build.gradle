plugins {
    id("java")
    id("maven-publish")
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id("com.modrinth.minotaur") version "2.+"
    id("com.gradleup.shadow") version "9.0.2"
}

repositories {
    mavenCentral()
    maven { url = "https://oss.sonatype.org/content/groups/public/" }
    maven { url = "https://repo.dmulloy2.net/repository/public/" }
    maven { url = "https://repo.codemc.io/repository/maven-public/" }
    maven { url = 'https://repo.extendedclip.com/releases/' }
    maven { url = "https://repo.bstats.org" }
}

dependencies {
    implementation(project(":regensystem-api"))

    compileOnly("io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT")
    compileOnly("me.clip:placeholderapi:2.11.6")
    implementation("org.json:json:20250517")
    implementation("org.yaml:snakeyaml:2.4")
    implementation("org.bstats:bstats-bukkit:3.1.0")
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
}

tasks {
    runServer {
        minecraftVersion("1.20.6")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.shadowJar {
    relocate("org.bstats", "fr.darklash.regensystem.libs.bstats")
    archiveFileName.set("RegenSystem-${rootProject.version}.jar")
    minimize()
}

tasks.build {
    dependsOn(shadowJar)
}

tasks.jar {
    enabled = false
}

processResources {
    def props = [version: rootProject.version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

modrinth {
    token.set(System.getenv("MODRINTH_TOKEN") ?: project.findProperty("modrinthToken")?.toString())

    projectId.set("regensystem")
    versionNumber.set(rootProject.version.toString())
    versionName.set("RegenSystem ${rootProject.version}")

    versionType.set("release") // release | beta | alpha

    uploadFile.set(tasks.named("shadowJar").flatMap { it.archiveFile })

    gameVersions.set([
            "1.20",
            "1.20.1",
            "1.20.2",
            "1.20.3",
            "1.20.4",
            "1.20.5",
            "1.20.6",
            "1.21",
            "1.21.1",
            "1.21.2",
            "1.21.3",
            "1.21.4",
            "1.21.5",
            "1.21.6",
            "1.21.7",
            "1.21.8"
    ])

    loaders.set(["bukkit", "paper"])
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(tasks.shadowJar.archiveFile) {
                builtBy tasks.shadowJar
                classifier = null
            }

            groupId = 'com.github.DarkLash1'
            artifactId = 'regensystem-plugin'
            version = rootProject.version
        }
    }
}
